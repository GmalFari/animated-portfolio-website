name: Gitpod Workspace on New Branch

on:
  create:
    branches:
      - 'dev/**'
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to create workspace for'
        required: true
        default: 'main'

jobs:
  gitpod-workspace-creation:
    runs-on: ubuntu-latest
    environment: 
      name: Workspace
      url: ${{ steps.create_workspace.outputs.workspace_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches
          
      - name: Setup Gitpod CLI
        run: |
          wget -O gitpod https://gitpod.io/static/bin/gitpod-cli-linux-amd64
          chmod +x gitpod
          sudo mv gitpod /usr/local/bin/
          gitpod login --token ${{ secrets.GITPOD_TOKEN }}

      - name: Create a Gitpod workspace
        id: create_workspace
        timeout-minutes: 5
        run: |
          set -e  # Exit on any error
          
          # Get branch name (support both automatic and manual trigger)
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            BRANCH_NAME="${{ github.event.inputs.branch }}"
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
          fi
          
          # Validate branch name
          if [ -z "$BRANCH_NAME" ]; then
            echo "Error: Could not determine branch name"
            exit 1
          fi
          echo "Branch name: $BRANCH_NAME"
          
          # Get and validate repository full name
          REPO_FULL_NAME="${{ github.repository }}"
          if [ -z "$REPO_FULL_NAME" ]; then
            echo "Error: Could not determine repository name"
            exit 1
          fi
          echo "Repository: $REPO_FULL_NAME"
          
          # Function to create workspace with retries
          create_workspace() {
            local max_retries=3
            local retry_count=0
            local wait_time=10
            
            while [ $retry_count -lt $max_retries ]; do
              echo "Attempt $((retry_count + 1)) of $max_retries to create workspace..."
              
              # Try to create workspace
              if WORKSPACE_URL=$(gitpod workspace create \
                "github.com/${REPO_FULL_NAME}/tree/${BRANCH_NAME}" \
                --class "large" \
                --timeout "30m" \
                --dont-wait); then
                
                # Validate URL format
                if [[ $WORKSPACE_URL =~ ^https://gitpod.io/# ]]; then
                  echo "Successfully created workspace"
                  return 0
                fi
              fi
              
              retry_count=$((retry_count + 1))
              
              if [ $retry_count -lt $max_retries ]; then
                echo "Waiting ${wait_time} seconds before retry..."
                sleep $wait_time
                wait_time=$((wait_time * 2))  # Exponential backoff
              fi
            done
            
            return 1
          }
          
          # Create workspace with retry logic
          if ! create_workspace; then
            echo "Error: Failed to create workspace after multiple attempts"
            exit 1
          fi
          
          # Validate workspace URL
          if [ -z "$WORKSPACE_URL" ]; then
            echo "Error: Workspace URL is empty"
            exit 1
          fi
          
          echo "Workspace URL: $WORKSPACE_URL"
          
          # Set outputs
          echo "workspace_url=${WORKSPACE_URL}" >> $GITHUB_OUTPUT
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
          
          # Set environment variables
          echo "WORKSPACE_URL=${WORKSPACE_URL}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Verify Workspace Creation
        if: success()
        run: |
          echo "Verifying workspace creation..."
          
          # Get workspace URL from previous step
          WORKSPACE_URL="${{ steps.create_workspace.outputs.workspace_url }}"
          
          # Verify workspace exists
          if gitpod workspace list | grep -q "${WORKSPACE_URL#https://gitpod.io/#}"; then
            echo "‚úÖ Workspace verified successfully"
          else
            echo "‚ùå Warning: Workspace may not be properly created"
            # Don't fail the workflow, but make it visible in the logs
          fi

      - name: Notify on completion
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "‚úÖ Workspace created successfully!"
            echo "üîó Workspace URL: ${{ steps.create_workspace.outputs.workspace_url }}"
            echo "üåø Branch: ${{ steps.create_workspace.outputs.branch_name }}"
          else
            echo "‚ùå Workspace creation failed"
            echo "Please check the logs above for details"
          fi

      - name: Cleanup on failure
        if: failure()
        run: |
          echo "Cleaning up after failure..."
          
          # Try to stop any pending workspace creation
          if [ ! -z "$WORKSPACE_URL" ]; then
            workspace_id="${WORKSPACE_URL#https://gitpod.io/#}"
            gitpod workspace stop "$workspace_id" || true
          fi
          
          # Additional cleanup if needed
          echo "Cleanup completed"